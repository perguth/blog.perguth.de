---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import Socials from "@components/Socials.astro";
import getSortedPosts from "@utils/getSortedPosts";
import { SOCIALS } from "@config";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  
  <!-- Baddie Rain Container -->
  <div id="baddie-rain" aria-hidden="true"></div>
  
  <main id="main-content">
    <section id="hero">
      <h1>{'<human-spirit shine="bright" share="knowledge" type="awesome" />'}</h1>
      <a
        target="_blank"
        href="/rss.xml"
        class="rss-link"
        aria-label="rss feed"
        title="RSS Feed"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
          ><path
            d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
          ></path><path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
          ></path><circle cx="6" cy="18" r="2"></circle>
        </svg>
        <span class="sr-only">RSS Feed</span>
      </a>
      <p>
        Tech enthusiast, passionate about driving innovation, solving real-world problems, and connecting with fellow technology lovers.
      </p>
      <p>
        I am happy you're here! Let's mesh:<br />
        âš¡<LinkButton
          className="underline decoration-dashed underline-offset-4 hover:text-skin-accent"
          href="https://ygg.thingylabs.io"
        >
          ygg.thingylabs.io
        </LinkButton>.
      </p>
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">Social Links:</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(({ data, slug }) => (
                <Card
                  href={`/posts/${slug}/`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          {recentPosts.length > 0 && <Hr />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts.map(
              ({ data, slug }, index) =>
                index < 4 && (
                  <Card
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )}
          </ul>
        </section>
      )
    }

    <div class="all-posts-btn-wrapper">
      <LinkButton href="/posts/">
        All Posts
        <svg xmlns="http://www.w3.org/2000/svg"
          ><path
            d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
          ></path>
        </svg>
      </LinkButton>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Baddie Rain Effect ===== */
  #baddie-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
  }

  .baddie-drop {
    position: absolute;
    color: #ff69b4;
    font-family: 'Courier New', monospace;
    font-size: 14px;
    font-weight: bold;
    opacity: 0.6;
    animation: fall linear infinite;
    text-shadow: 0 0 3px rgba(255, 105, 180, 0.3);
  }

  @keyframes fall {
    0% {
      transform: translateY(-100px);
      opacity: 0;
    }
    10% {
      opacity: 0.6;
    }
    90% {
      opacity: 0.6;
    }
    100% {
      transform: translateY(calc(100vh + 100px));
      opacity: 0;
    }
  }

  /* Reduce animation on mobile for performance */
  @media (max-width: 768px) {
    .baddie-drop {
      font-size: 12px;
      opacity: 0.4;
    }
  }

  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .baddie-drop {
      animation: none;
      display: none;
    }
  }

  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
    position: relative;
    z-index: 2;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
    position: relative;
    z-index: 2;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
    position: relative;
    z-index: 2;
  }

  /* Ensure main content is above the rain */
  #main-content {
    position: relative;
    z-index: 2;
    background: rgba(255, 255, 255, 0.95);
  }
</style>

<script>
  class BaddieRain {
    constructor() {
      this.container = document.getElementById('baddie-rain');
      this.words = ['baddie', 'âœ¨', 'ðŸ’–', 'ðŸŒ¸'];
      this.drops = [];
      this.maxDrops = window.innerWidth < 768 ? 8 : 15;
      this.isActive = true;
      
      // Respect user preferences
      if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        return;
      }
      
      this.init();
    }

    init() {
      this.createDrop();
      this.scheduleNext();
      
      // Clean up drops periodically
      setInterval(() => this.cleanup(), 5000);
      
      // Pause when page is not visible
      document.addEventListener('visibilitychange', () => {
        this.isActive = !document.hidden;
      });
    }

    createDrop() {
      if (!this.isActive || this.drops.length >= this.maxDrops) return;

      const drop = document.createElement('div');
      drop.className = 'baddie-drop';
      drop.textContent = this.words[Math.floor(Math.random() * this.words.length)];
      
      // Random horizontal position
      drop.style.left = Math.random() * 100 + '%';
      
      // Random animation duration (3-8 seconds)
      const duration = 3 + Math.random() * 5;
      drop.style.animationDuration = duration + 's';
      
      // Slight random delay
      drop.style.animationDelay = Math.random() * 2 + 's';
      
      this.container.appendChild(drop);
      this.drops.push(drop);
      
      // Remove drop after animation
      setTimeout(() => {
        if (drop.parentNode) {
          drop.parentNode.removeChild(drop);
          this.drops = this.drops.filter(d => d !== drop);
        }
      }, (duration + 2) * 1000);
    }

    scheduleNext() {
      if (!this.isActive) {
        setTimeout(() => this.scheduleNext(), 1000);
        return;
      }
      
      // Random interval between drops (1-4 seconds)
      const delay = 1000 + Math.random() * 3000;
      setTimeout(() => {
        this.createDrop();
        this.scheduleNext();
      }, delay);
    }

    cleanup() {
      // Remove any orphaned drops
      const orphans = this.container.querySelectorAll('.baddie-drop');
      if (orphans.length > this.maxDrops * 2) {
        Array.from(orphans).slice(0, orphans.length - this.maxDrops).forEach(drop => {
          if (drop.parentNode) drop.parentNode.removeChild(drop);
        });
      }
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new BaddieRain());
  } else {
    new BaddieRain();
  }
</script>
