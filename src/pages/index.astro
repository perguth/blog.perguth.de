---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import Socials from "@components/Socials.astro";
import getSortedPosts from "@utils/getSortedPosts";
import { SOCIALS } from "@config";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  
  <!-- Special Shoutout Banner -->
  <div class="announcement-banner" id="announcement-banner">
    <div class="banner-content">
      <div class="banner-text">
        <span class="sparkle">✨</span>
        <span class="message">Special shoutout to my favorite baddie!</span>
        <span class="sparkle">✨</span>
      </div>
      <button class="banner-close" onclick="closeBanner()" aria-label="Close announcement">
        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
          <path d="M8 6.586L13.657 1 15 2.343 9.414 8 15 13.657 13.657 15 8 9.414 2.343 15 1 13.657 6.586 8 1 2.343 2.343 1 8 6.586z"/>
        </svg>
      </button>
    </div>
  </div>
  
  <main id="main-content">
    <section id="hero">
      <h1>{'<human-spirit shine="bright" share="knowledge" type="awesome" />'}</h1>
      <a
        target="_blank"
        href="/rss.xml"
        class="rss-link"
        aria-label="rss feed"
        title="RSS Feed"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
          ><path
            d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
          ></path><path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
          ></path><circle cx="6" cy="18" r="2"></circle>
        </svg>
        <span class="sr-only">RSS Feed</span>
      </a>
      <p>
        Tech enthusiast, passionate about driving innovation, solving real-world problems, and connecting with fellow technology lovers.
      </p>
      <p>
        I am happy you're here! Let's mesh:<br />
        ⚡<LinkButton
          className="underline decoration-dashed underline-offset-4 hover:text-skin-accent"
          href="https://ygg.thingylabs.io"
        >
          ygg.thingylabs.io
        </LinkButton>.
      </p>
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">Social Links:</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(({ data, slug }) => (
                <Card
                  href={`/posts/${slug}/`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          {recentPosts.length > 0 && <Hr />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts.map(
              ({ data, slug }, index) =>
                index < 4 && (
                  <Card
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )}
          </ul>
        </section>
      )
    }

    <div class="all-posts-btn-wrapper">
      <LinkButton href="/posts/">
        All Posts
        <svg xmlns="http://www.w3.org/2000/svg"
          ><path
            d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
          ></path>
        </svg>
      </LinkButton>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Announcement Banner ===== */
  .announcement-banner {
    background: linear-gradient(135deg, #ff6b9d 0%, #ff8fab 50%, #ffa8cc 100%);
    color: white;
    padding: 12px 16px;
    position: relative;
    box-shadow: 0 2px 8px rgba(255, 107, 157, 0.2);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    animation: slideDown 0.5s ease-out;
  }

  .banner-content {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .banner-text {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    font-weight: 500;
    text-align: center;
  }

  .sparkle {
    animation: sparkle 2s ease-in-out infinite;
    display: inline-block;
  }

  .message {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    letter-spacing: 0.3px;
  }

  .banner-close {
    position: absolute;
    right: 0;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    padding: 4px;
    border-radius: 4px;
    opacity: 0.8;
    transition: opacity 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .banner-close:hover {
    opacity: 1;
    background: rgba(255, 255, 255, 0.1);
  }

  .banner-close:focus {
    outline: 2px solid rgba(255, 255, 255, 0.5);
    outline-offset: 2px;
  }

  @keyframes slideDown {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes sparkle {
    0%, 100% {
      transform: scale(1) rotate(0deg);
      opacity: 1;
    }
    50% {
      transform: scale(1.2) rotate(180deg);
      opacity: 0.8;
    }
  }

  .banner-hidden {
    animation: slideUp 0.3s ease-in forwards;
  }

  @keyframes slideUp {
    from {
      transform: translateY(0);
      opacity: 1;
      max-height: 100px;
    }
    to {
      transform: translateY(-100%);
      opacity: 0;
      max-height: 0;
      padding: 0;
      margin: 0;
    }
  }

  /* Mobile responsiveness */
  @media (max-width: 640px) {
    .announcement-banner {
      padding: 10px 12px;
    }
    
    .banner-text {
      font-size: 13px;
      gap: 6px;
    }
    
    .banner-close {
      position: static;
      margin-left: 12px;
    }
    
    .banner-content {
      justify-content: space-between;
    }
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .announcement-banner {
      animation: none;
    }
    
    .sparkle {
      animation: none;
    }
    
    .banner-hidden {
      display: none;
    }
  }

  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>

<script>
  function closeBanner() {
    const banner = document.getElementById('announcement-banner');
    if (banner) {
      banner.classList.add('banner-hidden');
      // Store in localStorage so it stays closed
      localStorage.setItem('baddie-banner-closed', 'true');
      
      // Remove from DOM after animation
      setTimeout(() => {
        banner.remove();
      }, 300);
    }
  }

  // Check if banner was previously closed
  document.addEventListener('DOMContentLoaded', () => {
    const wasClosed = localStorage.getItem('baddie-banner-closed');
    if (wasClosed === 'true') {
      const banner = document.getElementById('announcement-banner');
      if (banner) {
        banner.remove();
      }
    }
  });

  // Auto-hide after 10 seconds (optional)
  setTimeout(() => {
    const banner = document.getElementById('announcement-banner');
    if (banner && !banner.classList.contains('banner-hidden')) {
      closeBanner();
    }
  }, 10000);
</script>
